---
apiVersion: v1
kind: Namespace
metadata:
  name: golang-external-scaler-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: golang-external-scaler
  namespace: golang-external-scaler-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: golang-external-scaler
  template:
    metadata:
      labels:
        app: golang-external-scaler
    spec:
      containers:
      - name: scaler
        image: kind.local/externalscaler-sample:latest
        imagePullPolicy: Never  # we load it into kind directly above
        ports:
        - containerPort: 6000
---
apiVersion: v1
kind: Service
metadata:
  name: golang-external-scaler
  namespace: golang-external-scaler-ns
spec:
  ports:
  - port: 6000
    targetPort: 6000
  selector:
    app: golang-external-scaler
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-1
  namespace: golang-external-scaler-ns
spec:
  replicas: 0
  selector:
    matchLabels:
      app: test-1
  template:
    metadata:
      labels:
        app: test-1
    spec:
      containers:
      - name: http
        image: nginx:latest
        imagePullPolicy: Always
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: test-1
  namespace: golang-external-scaler-ns
spec:
  scaleTargetRef:
    name: test-1
  pollingInterval: 5
  cooldownPeriod: 0
  triggers:
    - type: external
      metadata:
        scalerAddress: golang-external-scaler.golang-external-scaler-ns:6000
        metricTargetSize: "1"  # the threshold to trigger scalaing
        metricModulus: "3"     # scales our metric to speed things up
